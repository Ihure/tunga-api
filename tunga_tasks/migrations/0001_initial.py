# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-07 06:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tagulous.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tunga_profiles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('responded', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('responded', models.BooleanField(default=False)),
                ('share', models.IntegerField(blank=True, null=True)),
                ('satisfaction', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants_added', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'participation',
            },
        ),
        migrations.CreateModel(
            name='SavedTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('fee', models.BigIntegerField()),
                ('currency', models.CharField(choices=[('EUR', 'EUR'), ('USD', 'USD')], default='EUR', max_length=5)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('visibility', models.PositiveSmallIntegerField(choices=[(1, 'Developers'), (2, 'My Team'), (3, 'Custom'), (4, 'Only Me')], default=1)),
                ('closed', models.BooleanField(default=False)),
                ('satisfaction', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applicants', models.ManyToManyField(blank=True, related_name='task_applications', through='tunga_tasks.Application', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_assigned', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(blank=True, related_name='task_participants', through='tunga_tasks.Participation', to=settings.AUTH_USER_MODEL)),
                ('skills', tagulous.models.fields.TagField(_set_tag_meta=True, help_text='Enter a comma-separated tag string', initial='Makerere University', to='tunga_profiles.Skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tasks_created', to=settings.AUTH_USER_MODEL)),
                ('visible_to', models.ManyToManyField(blank=True, related_name='task_invites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Close Request'), (2, 'Payment Request')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunga_tasks.Task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='savedtask',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunga_tasks.Task'),
        ),
        migrations.AddField(
            model_name='savedtask',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='participation',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunga_tasks.Task'),
        ),
        migrations.AddField(
            model_name='participation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tunga_tasks.Task'),
        ),
        migrations.AddField(
            model_name='application',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='task',
            unique_together=set([('user', 'title', 'fee')]),
        ),
        migrations.AlterUniqueTogether(
            name='participation',
            unique_together=set([('user', 'task')]),
        ),
        migrations.AlterUniqueTogether(
            name='application',
            unique_together=set([('user', 'task')]),
        ),
    ]
